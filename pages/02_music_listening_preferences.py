import dash
from dash import html, callback, no_update, State
import dash_bootstrap_components as dbc
from dash import Dash, dcc, html, Input, Output

from utils.helper import make_toast
from utils.manager import data_manager

# initialize app
page_id = "music_listening_preferences"
dash.register_page(__name__,
                   path='/' + page_id,
                   title='Music Listening Preferences Questions',
                   name='Your Music Listening Preferences'
                   )

options = [
    {"label": "Never", "value": 0},
    {"label": "Rarely", "value": 1},
    {"label": "Sometimes", "value": 2},
    {"label": "Often", "value": 3},
    {"label": "Always", "value": 4},
]

# set app layout
layout = dbc.Container(children=[
    dcc.Location(id='url'),
    # set app layout
    html.Div([
        html.Div(id="hidden_div_for_redirect_callback_music_listening"),
        html.Div(children=[
            html.Br(),
            html.Br(),
            html.H1('Music Listening Preferences', id='title_music_listening', style={'textAlign': 'center'}),
            html.Br(),
            html.Br(),
            html.P('On average I listen to music ... per day.', {"type": "label", "index": 'listen_hours'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'listen_hours'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=[
                    {"label": "0h", "value": 0},
                    {"label": "1h", "value": 1},
                    {"label": "2h", "value": 2},
                    {"label": "3h", "value": 3},
                    {"label": "4h", "value": 4},
                    {"label": "5h", "value": 5},
                    {"label": "6h", "value": 6},
                    {"label": "7h", "value": 7},
                    {"label": "8h", "value": 8},
                    {"label": "9h", "value": 9},
                    {"label": "10h", "value": 10},
                    {"label": "11h", "value": 11},
                    {"label": "12h+", "value": 12},
                ],
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music when I wake up.', id={"type": "label", "index": 'wake_up'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'wake_up'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music while bathing.', id={"type": "label", "index": 'bathing'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'bathing'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music while exercising or doing sports.', id={"type": "label", "index": 'exercising'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'exercising'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music while working.', id={"type": "label", "index": 'working'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'working'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music while doing housework.', id={"type": "label", "index": 'housework'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'housework'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music while relaxing.', id={"type": "label", "index": 'relaxing'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'relaxing'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music while eating.', id={"type": "label", "index": 'eating'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'eating'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music as background for socializing.', id={"type": "label", "index": 'socializing'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'socializing'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music as background to romantic company.', id={"type": "label", "index": 'romantic'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'romantic'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music while reading.', id={"type": "label", "index": 'reading'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'reading'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music when going to sleep.', id={"type": "label", "index": 'sleep'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'sleep'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music while driving.', id={"type": "label", "index": 'driving'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'driving'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            html.P('I listen to music riding the train, bus or plane.', id={"type": "label", "index": 'train'}),
            dbc.RadioItems(
                id={"type": "slider", "index": 'train'},
                className="btn-group",
                inputClassName="btn-check",
                labelClassName="btn btn-outline-primary",
                labelCheckedClassName="active",
                options=options,
                value=None,
                style={"width": "100%",
                       "display": 'flex',
                       "flex-direction": 'row',
                       'justify': 'center',
                       'justify-content':
                           'space-between',
                       'align-items': 'center'},
            ),
            html.Br(),
            html.Br(),
            dbc.Button('Next', id='start_ml', n_clicks=0,
                       style={'textAlign': 'center',
                              'width': 'auto',
                              'padding-left': '5vw',
                              'padding-right': '5vw',
                              'horizontalAlign': 'center'})
        ], style={'padding': 32, 'flex': 1})
    ], style={'display': 'flex',
              'flex-direction': 'row',
              'padding-left': 'max(calc(50% - 400px), 2%)',
              'padding-right': 'max(calc(50% - 400px), 2%)',
              }),
    html.Div(id='container-button-basic'),
    html.Div(
        id="toast-container-ml",
        style={"position": "fixed",
               "top": 10,
               "right": 10,
               "width": 350},
    ),
])

@callback(
    [Output("hidden_div_for_redirect_callback_music_listening", "children"),
     Output("toast-container-ml", "children"),
     Output("start_ml", 'n_clicks')],
    [State('user_id', 'data'),
     Input('start_ml', 'n_clicks'),
     State({"type": "slider", "index": 'listen_hours'}, 'value'),
     State({"type": "slider", "index": 'wake_up'}, 'value'),
     State({"type": "slider", "index": 'bathing'}, 'value'),
     State({"type": "slider", "index": 'exercising'}, 'value'),
     State({"type": "slider", "index": 'working'}, 'value'),
     State({"type": "slider", "index": 'housework'}, 'value'),
     State({"type": "slider", "index": 'relaxing'}, 'value'),
     State({"type": "slider", "index": 'eating'}, 'value'),
     State({"type": "slider", "index": 'socializing'}, 'value'),
     State({"type": "slider", "index": 'romantic'}, 'value'),
     State({"type": "slider", "index": 'reading'}, 'value'),
     State({"type": "slider", "index": 'sleep'}, 'value'),
     State({"type": "slider", "index": 'driving'}, 'value'),
     State({"type": "slider", "index": 'train'}, 'value')]
)
def go_to_next_page(code, n_clicks, listen_hours, wake_up, bathing, exercising, working, housework, relaxing,
                    eating, socializing, romantic, reading, sleep, driving, train):
    if n_clicks > 0:

        if None in [listen_hours, wake_up, bathing, exercising, working, housework, relaxing, eating, socializing,
                    romantic, reading, sleep, driving, train]:
            return None, make_toast("Please select an answer for every question.", "music_notice"), 0

        data_manager.save_data(user_id=code,
                               session_id=code,
                               data={"hours_per_day": listen_hours,
                                    "wake_up": wake_up,
                                    "bathing": bathing,
                                    "eating": eating,
                                    "exercising": exercising,
                                     "working": working,
                                     "housework": housework,
                                    "relaxing": relaxing,
                                     "socializing": socializing,
                                     "romantic": romantic,
                                      "reading": reading,
                                     "sleep": sleep,
                                     "driving": driving,
                                     "commuting_train_bus_plane": train
        }, collection=page_id)

        return dcc.Location(pathname="/personality", id="personality_id"), None, 0
    return None, None, 0
